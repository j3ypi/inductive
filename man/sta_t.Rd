% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sta_t.R
\name{sta_t}
\alias{sta_t}
\title{Student's t-Test or Welch-Test}
\usage{
sta_t(
  data = NULL,
  formula = NULL,
  x = NULL,
  y = NULL,
  alternative = "two.sided",
  mu = 0,
  paired = FALSE,
  var.equal = FALSE,
  conf.level = 0.95,
  obj = TRUE,
  na.action = getOption("na.action"),
  ...
)
}
\arguments{
\item{data}{an optional matrix or data frame (or similar: see model.frame) containing the variables in the formula formula. By default the variables are taken from environment(formula).}

\item{formula}{a formula of the form lhs ~ rhs where lhs is a numeric variable giving the data values and rhs a factor with two levels giving the corresponding groups.}

\item{x}{numeric vectors of data values, or fitted linear model objects (inheriting from class "lm").}

\item{y}{numeric vectors of data values, or fitted linear model objects (inheriting from class "lm").}

\item{alternative}{a character string specifying the alternative hypothesis, must be one of "two.sided" (default), "greater" or "less". You can specify just the initial letter.}

\item{mu}{a number indicating the true value of the mean (or difference in means if you are performing a two sample test).}

\item{paired}{a logical indicating whether you want a paired t-test.}

\item{var.equal}{a logical variable indicating whether to treat the two variances as being equal. If TRUE then the pooled variance is used to estimate the variance otherwise the Welch (or Satterthwaite) approximation to the degrees of freedom is used.}

\item{conf.level}{confidence level for the returned confidence interval.}

\item{obj}{a logical whether the test object of stats::t.test() should be returned.}

\item{na.action}{a function which indicates what should happen when the data contain NAs. Defaults to getOption("na.action").}

\item{...}{further arguments to be passed to or from methods.}
}
\description{
Performs one and two sample t-tests or Welch-tests on vectors of data.
}
\examples{
\dontrun{
library(magrittr)
data(big_five, package = "inductive")

big_five \%>\% 
  sta_t(Extraversion ~ Gender)

big_five \%>\% 
  sta_t(x = Extraversion, y = Neuroticism, var.equal = TRUE)

big_five \%>\% 
  sta_t(x = Neuroticism, y = Extraversion)

big_five \%>\% 
  sta_t(Extraversion ~ Neuroticism)

sta_t(big_five, Extraversion ~ Gender)
}

}
